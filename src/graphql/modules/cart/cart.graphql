type Query {
  cart(id: ID): Cart
  cartItems(after: String, first: Int = 10): CartCartItemsConnection!
}

type Mutation {
  addCartItem(input: AddToCartInput!): CartCartItemsEdge
  removeCartItem(input: RemoveFromCartInput!): CartItem!
}

type Cart {
  id: ID!
  items: CartCartItemsConnection
}

type CartCartItemsConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [CartCartItemsEdge!]!
}

type CartCartItemsEdge implements Edge {
  cursor: String!
  node: CartItem
}

type CartItem implements Node {
  id: ID!
  name: String!
  description: String
  quantity: Int!
  image: String
}

input AddToCartInput {
  cartId: ID!
  id: ID
  name: String!
  description: String
  image: String
  price: Int!
  quantity: Int = 1
}

input RemoveFromCartInput {
  id: ID!
}
